{"version":3,"sources":["component/Profile/Profile.module.css","component/FriendList/FriendList.module.css","component/Statistics/Statistics.module.css","component/TransactionHistory/TransactionHistory.module.css","component/Profile/Profile.js","component/Statistics/Statistics.js","component/FriendList/FriendList.js","component/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","s","profile","description","src","alt","label","quantity","followers","views","likes","randomColor","rgb","Math","random","mix","brightness","map","x","round","join","Statistics","title","statistics","toUpperCase","item","style","backgroundColor","percentage","id","FriendsList","props","friends","friend","status","isOnline","online","offline","width","TransactionHistory","items","type","amount","currency","App","user","statisticalData","FriendList","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f5b4bdd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3jQLu\",\"description\":\"Profile_description__25RBG\",\"avatar\":\"Profile_avatar__JwEjr\",\"name\":\"Profile_name__LN0XU\",\"tag\":\"Profile_tag__jy8Y4\",\"location\":\"Profile_location__taWGe\",\"stats\":\"Profile_stats__2S_a0\",\"label\":\"Profile_label__1D2HC\",\"quantity\":\"Profile_quantity__10adC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendList_item__VTqcY\",\"online\":\"FriendList_online__3huMN\",\"offline\":\"FriendList_offline__3Yv6D\",\"status\":\"FriendList_status__1nQ6F\",\"avatar\":\"FriendList_avatar__3rsnM\",\"name\":\"FriendList_name__1oW2q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1UkW-\",\"stat-list\":\"Statistics_stat-list__1ozD_\",\"item\":\"Statistics_item__1U4xQ\",\"title\":\"Statistics_title___kjDv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction-history\":\"TransactionHistory_transaction-history__2Z7NS\"};","import s from './Profile.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Profile({ name, tag, location, avatar, stats }) {\n  return (\n    <div className={s.profile}>\n      <div className={s.description}>\n        <img src={avatar} alt=\"Аватар пользователя\" className={s.avatar} />\n        <p className={s.name}>{name}</p>\n        <p className={s.tag}>@{tag}</p>\n        <p className={s.location}>{location}</p>\n      </div>\n\n      <ul className={s.stats}>\n        <li>\n          <span className={s.label}>Followers</span>\n          <span className={s.quantity}>{stats.followers}</span>\n        </li>\n        <li>\n          <span className={s.label}>Views</span>\n          <span className={s.quantity}>{stats.views}</span>\n        </li>\n        <li>\n          <span className={s.label}>Likes</span>\n          <span className={s.quantity}>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.object.isRequired,\n};\n\nexport default Profile;\n","import s from './Statistics.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Statistics({ title, stats }) {\n  return (\n    <section className={s.statistics}>\n      {title && <h2 className={s.title}>{title.toUpperCase()}</h2>}\n      <ul className={s['stat-list']}>\n        {stats.map(item => (\n          <li\n            key={item.id}\n            style={{ backgroundColor: randomColor() }}\n            className={s.item}\n          >\n            <span className={s.label}>{item.label}</span>\n            <span className={s.percentage}>{item.percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nStatistics.propTypes = {\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ),\n  title: PropTypes.string,\n};\n\nfunction randomColor() {\n  const brightness = 5;\n  var rgb = [Math.random() * 256, Math.random() * 256, Math.random() * 256];\n  var mix = [brightness * 51, brightness * 51, brightness * 51]; //51 => 255/5\n  var mixedrgb = [rgb[0] + mix[0], rgb[1] + mix[1], rgb[2] + mix[2]].map(\n    function (x) {\n      return Math.round(x / 2.0);\n    },\n  );\n  return 'rgb(' + mixedrgb.join(',') + ')';\n}\n\nexport default Statistics;\n","import s from './FriendList.module.css';\nimport PropTypes from 'prop-types';\n\nfunction FriendsList(props) {\n  return (\n    <ul className={s['friend-list']}>\n      {props.friends.map(friend => (\n        <li key={friend.id} className={s.item}>\n          <span\n            className={\n              s.status + ' ' + (friend.isOnline ? s.online : s.offline)\n            }\n          ></span>\n          <img\n            className={s.avatar}\n            src={friend.avatar}\n            alt=\"avatar\"\n            width=\"48\"\n          />\n          <p className={s.name}>{friend.name}</p>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nFriendsList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default FriendsList;\n","import s from './TransactionHistory.module.css';\nimport PropTypes from 'prop-types';\n\nfunction TransactionHistory({ items }) {\n  return (\n    <table className={s['transaction-history']}>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map(item => (\n          <tr key={item.id}>\n            <td>{item.type}</td>\n            <td>{item.amount}</td>\n            <td>{item.currency}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default TransactionHistory;\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import Profile from './component/Profile';\nimport statisticalData from './statistical-data.json';\nimport Statistics from './component/Statistics';\nimport FriendList from './component/FriendList';\nimport TransactionHistory from './component/TransactionHistory';\nimport transactions from './transactions.json';\nimport user from './user.json';\nimport friends from './friends.json';\n\nfunction App() {\n  return (\n    <>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <Statistics stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}